name: 커밋 목록 가져오기

on:
  workflow_dispatch:
  schedule:
    - cron: '*/5 * * * *'

jobs:
  create_notion_page:
    runs-on: ubuntu-latest
    steps:
      - name: 깃 리포지토리 fetch 및 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 마지막으로 확인한 커밋 ID 가져오기
        id: last-checked-commit
        run: |
          last_checked_commit=${{ secrets.LAST_CHECKED_COMMIT }}
          if [ -z "$last_checked_commit" ]; then
            last_checked_commit=$(git rev-list --max-parents=0 HEAD) # 처음 커밋 ID 가져오기
          fi
          echo "last_checked_commit=$last_checked_commit" >> $GITHUB_ENV

      - name: 새로운 커밋 목록 가져오기
        id: get-commits
        run: |
          last_checked_commit=${{ env.last_checked_commit }}
          commits=$(git rev-list ${last_checked_commit}..HEAD --no-merges | tr '\n' ',')
          echo "commits=$commits" >> $GITHUB_OUTPUT

      - name: 커밋 목록이 있는지 확인
        run: |
          if [ -z "${{ steps.get-commits.outputs.commits }}" ]; then
            echo "No new commits to process."
            exit 0
          fi

      - name: 커밋 목록 출력 (테스트)
        run: |
          echo "New commits to process:"
          echo "${{ steps.get-commits.outputs.commits }}"

      - name: 마지막으로 확인한 커밋 ID 기록
        id: save-last-commit
        run: |
          last_commit=$(echo "${{ steps.get-commits.outputs.commits }}" | awk -F, '{for(i=NF;i>0;i--) if($i!="") {print $i; exit}}')
          echo "last_commit=$last_commit" >> $GITHUB_ENV

      - name: GitHub Secrets 업데이트
        run: |
          echo "${{ env.last_commit }}" | gh secret set LAST_CHECKED_COMMIT --repo $GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
